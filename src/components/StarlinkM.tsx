/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei/native'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber/native'

type GLTFResult = GLTF & {
    nodes: {
        ['01_objects002']: THREE.Mesh
        COMPOUND001: THREE.Mesh
        COMPOUND001001: THREE.Mesh
        COMPOUND002001: THREE.Mesh
    }
    materials: {
        mat_0: THREE.MeshStandardMaterial
        ['mat_0.001']: THREE.MeshStandardMaterial
        mat_1: THREE.MeshStandardMaterial
    }
}

type ActionName = 'COMPOUND.001Action'

export default function Starlink(props: JSX.IntrinsicElements['group']) {
    const droneRef = useRef()

    // Adjust the rotation
    useFrame(() => {
        if (droneRef.current) {
            droneRef.current.rotation.y += 0.01 // Rotates along y-axis
        }
    })


    const group = useRef<THREE.Group>(null)
    const { nodes, materials, animations } = useGLTF(require('../assets/models/Starlink.glb')) as GLTFResult
    const { actions } = useAnimations(animations, group)
    return (
        <group ref={droneRef} scale={1.3} position={[0, -1.6, 0.5]}>
            <group ref={group} {...props} dispose={null}>
                <group name="Scene">
                    <mesh
                        name="01_objects002"
                        castShadow
                        receiveShadow
                        geometry={nodes['01_objects002'].geometry}
                        material={materials.mat_0}
                        position={[0, 1.407, 0]}
                        rotation={[0, -1.566, 0]}
                        scale={4.23}
                    />
                    <group name="01_objects" position={[0, 1.687, 0]} rotation={[0, -1.566, 0]} scale={4.23}>
                        <group name="COMPOUND003001">
                            <mesh
                                name="COMPOUND001"
                                castShadow
                                receiveShadow
                                geometry={nodes.COMPOUND001.geometry}
                                material={materials['mat_0.001']}
                                position={[0.004, -0.029, -0.015]}
                            />
                            <mesh
                                name="COMPOUND001001"
                                castShadow
                                receiveShadow
                                geometry={nodes.COMPOUND001001.geometry}
                                material={materials.mat_1}
                            />
                            <mesh
                                name="COMPOUND002001"
                                castShadow
                                receiveShadow
                                geometry={nodes.COMPOUND002001.geometry}
                                material={materials.mat_1}
                            />
                        </group>
                    </group>
                </group>
            </group>
        </group>
    )
}

useGLTF.preload(require('../assets/models/Starlink.glb'))
